name: "Code Quality & Unit Testing"
on:
  workflow_call:
    inputs:
      ocqVersion:
        required: true
        type: string
        description: "ordinary/code-quality image version number"
        default: "branch-dev"
      phpVersion:
        required: true
        type: string
        description: "PHP version to use for testing"
        default: "8.3"
      lint:
        required: true
        type: boolean
        default: true
      static_analysis:
        required: true
        type: boolean
        default: true
      code_style:
        required: true
        type: boolean
        default: true
      unit_test:
        required: true
        type: boolean
        default: true
env:
  ocqImage: ghcr.io/ordinaryphp/code-quality:${{ inputs.ocqVersion }}-php${{ inputs.phpVersion }}
jobs:
  code-quality:
    runs-on: ubuntu-latest
    container: ${{ var.ocqImage }}
    steps:
      - uses: checkout@main
      - name: Composer Validate --no-interaction -vvv
        run: composer validate
      - name: Composer Install
        run: composer install --no-interaction --optimize-autoloader -v
      - name: Lint
        if: '${{ !cancelled() && var.lint }}'
        run: phplint
      - name: Static Analysis
        if: '${{ !cancelled() && var.static_analysis }}'
        run: psalm
      - name: Copy bin files with php extension
        if: '${{ !cancelled() && var.code_style }}'
        run: |
          for f in /code-quality/bin/*; do
            if [ -f "$f" ]; then
              cp "$f" "$f.php"
            fi
          done
      - name: Code Style
        if: '${{ !cancelled() && var.code_style }}'
        run: phpcs
  unit-tests:
    if: ${{ var.unit_test && hashFiles('tests/') != '' }}
    runs-on: ubuntu-latest
    container: ${{ var.ocqImage }}
    steps:
      - name: Composer Install
        run: composer install --no-interaction --optimize-autoloader --no-dev
      - name: Unit Tests
        run: phpunit